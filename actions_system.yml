# actions_system.yml
---
- name: Exécution d'actions système sur plusieurs serveurs
  hosts: mon_groupe
  become: true   # Utilise les privilèges sudo pour les actions système
  gather_facts: false

  vars_files:
    - vault.yml  # Inclut le fichier chiffré avec Ansible Vault

  tasks:
    - name: Mettre à jour tous les paquets (RedHat/CentOS)
      ansible.builtin.yum:
        name: "*"
        state: latest
      when: ansible_os_family == "RedHat"

    - name: Mettre à jour tous les paquets (Debian/Ubuntu)
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
      when: ansible_os_family == "Debian"

    - name: Créer un utilisateur "utilisateur_test" avec un mot de passe
      ansible.builtin.user:
        name: utilisateur_test
        password: "{{ 'mot_de_passe' | password_hash('sha512') }}"

    - name: Redémarrer le service SSH
      ansible.builtin.service:
        name: ssh
        state: restarted
        
    # Installation du logiciel test.elf
    - name: Télécharger le fichier test.elf.zip depuis le dépôt
      ansible.builtin.get_url:
        url: "http://software_depot/test.elf.zip"
        dest: "/tmp/test.elf.zip"
        mode: '0644'

    - name: Décompresser test.elf.zip
      ansible.builtin.unarchive:
        src: "/tmp/test.elf.zip"
        dest: "/opt/software/"
        remote_src: true

    - name: Installer test.elf
      ansible.builtin.command: "chmod +x /opt/software/test.elf && /opt/software/test.elf --install"
      register: install_result
      failed_when: install_result.rc != 0

    - name: Vérifier l'installation de test.elf
      ansible.builtin.stat:
        path: "/opt/software/test.elf"
      register: elf_check

    - name: Retourner le résultat de l'installation
      ansible.builtin.debug:
        msg: "Installation réussie de test.elf." 
      when: elf_check.stat.exists

    - name: Erreur d'installation de test.elf
      ansible.builtin.fail:
        msg: "L'installation de test.elf a échoué."
      when: not elf_check.stat.exists
